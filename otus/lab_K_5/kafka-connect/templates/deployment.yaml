apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kafka-connect.fullname" . }}
  labels:
    {{- include "kafka-connect.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "kafka-connect.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "kafka-connect.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.port }}
          env:
          - name: BOOTSTRAP_SERVERS
            value: "{{.Values.kafka.BOOTSTRAP_SERVERS }}"
          - name: GROUP_ID
            value: "{{.Values.kafka.GROUP_ID }}"
          - name: OFFSET_STORAGE_TOPIC
            value: "{{.Values.kafka.OFFSET_STORAGE_TOPIC }}"
          - name: CONFIG_STORAGE_TOPIC
            value: "{{.Values.kafka.CONFIG_STORAGE_TOPIC }}"
          - name: STATUS_STORAGE_TOPIC
            value: "{{.Values.kafka.STATUS_STORAGE_TOPIC }}"
              
              
